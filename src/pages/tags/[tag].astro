---
import BaseLayout from '../../layouts/BaseLayout.astro';

interface Post {
  frontmatter: {
    tags?: string[];
    title: string;
  };
  url: string;
}

// export async function getStaticPaths() {
//   const allPosts = Object.values(import.meta.glob('../posts/*.md', { eager: true })) as Post[];

//   // const tags = ["astro", "successes", "community", "blogging", "setbacks", "learning in public"];
//   const uniqueTags = [...new Set(allPosts.map((post: any) => post.frontmatter.tags).flat())]
  
//   return uniqueTags.map((tag) => ({
//     const filteredPosts = allPosts.filter((post: any) => post.frontmatter.tags?.includes(tag));

//     return {
//       params: { tag },
//       props: { posts: filteredPosts },
//     }
//   }));
// }
export async function getStaticPaths() {
  const allPosts = Object.values(import.meta.glob('../posts/*.md', { eager: true })) as Post[];

  // const tags = ["astro", "successes", "community", "blogging", "setbacks", "learning in public"];
  const uniqueTags = [...new Set(allPosts.map((post: any) => post.frontmatter.tags).flat())]
  
  return uniqueTags.map((tag) => {
    const filteredPosts = allPosts.filter((post: any) => post.frontmatter.tags?.includes(tag));

    return {
      params: { tag },
      props: { posts: filteredPosts },
    };
  });
}

const { tag } = Astro.params;
const { posts } = Astro.props as { posts: Post[] };

---
<BaseLayout pageTitle={tag}>
  <p>Posts tagged with {tag}</p>
  <ul>
    {posts.map((post: any) => <li><a href={post.url}>{post.frontmatter.title}</a></li>)}
  </ul>
</BaseLayout>